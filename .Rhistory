source("~/Documents/smith/labbook/Branche_et_al2023/code/plot_CoVAIL_landscapes.R")
arm_cols
path_to_data <- file.path("data", "metadata")
sr_group_code <- read.csv(file.path(path_to_data, "sr_group_code.csv"), sep = ";")
color_schemes <- list.files(path_to_data, pattern = "_scheme_")
color_schemes
col_scheme <- color_schemes[1]
sr_group_colors <- read_csv(file.path(path_to_data, col_scheme), sep = ";")
sr_group_colors <- read.csv(file.path(path_to_data, col_scheme), sep = ";")
arm_cols <- sr_group_colors[unique(sr_group_data$arm_code), "Color"]
names(arm_cols) <- unique(sr_group_data$arm_code)
sr_group_colors <- read.csv(file.path(path_to_data, col_scheme), sep = ";")
sr_group_colors
sr_group_colors <- read.csv(file.path(path_to_data, col_scheme), sep = ";", row.names = "Serum.Group")
sr_group_colors <- read.csv(file.path(path_to_data, col_scheme), sep = ";", row.names = "Serum.group")
arm_cols <- sr_group_colors[unique(sr_group_data$arm_code), "Color"]
names(arm_cols) <- unique(sr_group_data$arm_code)
arm_cols
source("~/Documents/smith/labbook/Branche_et_al2023/code/plot_CoVAIL_landscapes_colour_schemes.R")
lndscp_3js <- plot_landscapes_from_list(data3js, titertables_groups_t, lndscp_fits_t, map, gmt_data, highlighted_ags, ag_plot_names,
arm_cols = arm_colors)
lndscp <-r3js(
lndscp_3js,
rotation = angle$rotation,
zoom = angle$zoom
)
lndscp
source("~/Documents/smith/labbook/Branche_et_al2023/functions/landscape_functions.R")
lndscp_3js <- plot_landscapes_from_list(data3js, titertables_groups_t, lndscp_fits_t, map, gmt_data, highlighted_ags, ag_plot_names,
arm_cols = arm_colors)
lndscp <-r3js(
lndscp_3js,
rotation = angle$rotation,
zoom = angle$zoom
)
lndscp
source("~/Documents/smith/labbook/Branche_et_al2023/functions/landscape_functions.R")
data3js <- base_plot_data3js(map, lndscp_fits, highlighted_ags, lims, ag_plot_names)
lndscp_3js <- plot_landscapes_from_list(data3js, titertables_groups_t, lndscp_fits_t, map, gmt_data, highlighted_ags, ag_plot_names,
arm_cols = arm_colors)
lndscp <-r3js(
lndscp_3js,
rotation = angle$rotation,
zoom = angle$zoom
)
lndscp
source("~/Documents/smith/labbook/Branche_et_al2023/functions/landscape_functions.R")
save_name <- file.path(figure_dir,paste0(v1, "_", v2, "_", v_manuf, "_gmt_landscapes_", gsub(".csv","", col_scheme)))
data3js <- base_plot_data3js(map, lndscp_fits, highlighted_ags, lims, ag_plot_names)
lndscp_3js <- plot_landscapes_from_list(data3js, titertables_groups_t, lndscp_fits_t, map, gmt_data, highlighted_ags, ag_plot_names,
arm_cols = arm_colors)
lndscp <-r3js(
lndscp_3js,
rotation = angle$rotation,
zoom = angle$zoom
)
lndscp
source("~/Documents/smith/labbook/Branche_et_al2023/code/plot_CoVAIL_landscapes_colour_schemes.R")
source("~/Documents/smith/labbook/Branche_et_al2023/code/plot_CoVAIL_landscapes_colour_schemes.R")
source("~/Documents/smith/labbook/Branche_et_al2023/code/plot_CoVAIL_landscapes_colour_schemes.R")
saveRDS(lndscp_list, file.path("data", "landscape_color_schemes.rds"))
lndscp_list$`inf_figures/14DEC2022/inf/col_scheme_landscapes/wo_2dose_b+o_adj/optimization_1/D1_D91_Pf_gmt_landscapes_colour_scheme_auto`
knitr::opts_chunk$set(echo = FALSE, warning = FALSE, message = FALSE)
lndscp_list <- readRDS(file.path("data", "landscape_color_schemes.rds"))
getwd()
lndscp_list <- readRDS(file.path("..", "data", "landscape_color_schemes.rds"))
color_names <- names(lndscp_list)
color_names
emmes_names <- color_names[grepl("emmes", color_names)]
emmes_names
source("~/Documents/smith/labbook/Branche_et_al2023/code/plot_CoVAIL_landscapes_colour_schemes.R")
lndscp_list[[emmes_names]]
lndscp_list <- readRDS(file.path("..", "data", "landscape_color_schemes.rds"))
color_names <- names(lndscp_list)
emmes_names <- color_names[grepl("emmes", color_names)]
camb_names <- color_names[grepl("cambridge", color_names)]
auto_names <- color_names[grepl("auto", color_names)]
lndscp_list[[emmes_names]]
emmes_names
names(lndscp_list)
emmes_names
lndscp_list[[emmes_names[1]]]
lndscp_list[[emmes_names[1]]]
lndscp_list[[emmes_names]
lndscp_list[[emmes_names]]
lndscp_list[[emmes_names]]
lndscp_list
lndscp_list[[1]]
lndscp_list[[c(1:3)]]
lndscp_list[c(1:3)]
knitr::opts_chunk$set(echo = FALSE, warning = FALSE, message = FALSE, include = TRUE)
show(lndscp_list[[1]])
show(lndscp_list[c(1:2)])
emmes_list <- lndscp_list[emmes_names]
camb_list <- lndscp_list[camb_names]
auto_list <- lndscp_list[auto_names]
names(camb_list)
lndscps[[3]]
lndscps <- emmes_list
lndscps[[3]]
lndscps[[6]]
source("~/Documents/smith/labbook/Branche_et_al2023/code/plot_CoVAIL_landscapes_colour_schemes.R")
color_schemes
source("~/Documents/smith/labbook/Branche_et_al2023/code/plot_CoVAIL_landscapes_colour_schemes.R")
lndscp
source("~/Documents/smith/labbook/Branche_et_al2023/code/plot_CoVAIL_landscapes_colour_schemes.R")
lndscp
lndscp
source("~/Documents/smith/labbook/Branche_et_al2023/code/plot_CoVAIL_landscapes.R")
sr_group_colors
source("~/Documents/smith/labbook/Branche_et_al2023/code/plot_CoVAIL_landscapes.R")
lndscp
source("~/Documents/smith/labbook/Branche_et_al2023/code/plot_CoVAIL_landscapes.R")
source("~/Documents/smith/labbook/Branche_et_al2023/code/plot_CoVAIL_landscapes.R")
source("~/Documents/smith/labbook/Branche_et_al2023/code/plot_titer_lineplot.R")
source("~/Documents/smith/labbook/Branche_et_al2023/code/plot_titer_lineplot.R")
View(sr_group_colors)
# Setup workspace
rm(list = ls())
library(Racmacs)
library(tidyverse)
library(r3js)
library(ablandscapes)
library(htmlwidgets)
library(webshot2)
library(png)
library(grid)
library(gridExtra)
library(ggplot2)
library(patchwork)
source(file.path("functions", "format_data.R"))
source(file.path("functions", "landscape_functions.R"))
set.seed(100)
exclude_2dose <- TRUE
date <- "14DEC2022"
day <- "91"
inf_names <- c(non_inf = "non_inf", inf = "inf")
#set day, visit numbers
day_visno <- c("D1", "D91")
BO_D_ajudstment <- c("wo_2dose")
only_gmt_landscapes <- TRUE
# set optimization nr to fit BA.4/5 position; optimization nr 56 gives upper BA.4/5 for presubmission map; 57 for map with new delta sera
opti_nr <- 1
ag_plot_names <- c("D614G" = "D614G", "B.1.617.2" = "Delta", "B.1.351" = "Beta", "BA.1" = "BA.1", "BA.2.12.1" = "BA.2.12.1", "BA.4/BA.5" = "BA.4/BA.5")
path_to_data <- file.path("data", "metadata")
sr_group_code <- read.csv(file.path(path_to_data, "sr_group_code.csv"), sep = ";")
sr_group_colors <- read.csv("./data/metadata/colour_scheme_emmes.csv", sep = ";", row.names = "Serum.group")
# this map is the one without the new delta sera, October 20202
map <- read.acmap(file.path("data", "maps", "map_ndsubset_no_outliers_slope_adjusted.ace"))
agShown(map)[agNames(map) %in% c("BA.1.1", "BA.1+A484K","BA.3", "BA.2.12.1")] <- FALSE
#align pre submission map
map <- realignMap(map, map)
map <- keepSingleOptimization(map, optimization_number = opti_nr)
lims <- Racmacs:::mapPlotLims(map, sera = FALSE)
unique(srGroups(map))
unique(srOutline(map))
srOutline(map)[srGroup(map) == "2x mRNA-1273 new"]
srOutline(map)[srGroups(map) == "2x mRNA-1273 new"]
Racmacs::view(map)
srGroups(map)[srNames(map)=="Ser_024"]
srOutline(map)[srNames(map)=="Ser_024"]
#---------- Check for revision comments
map_og <- map
plot(map_og)
unique(srGroups(map))
table(srGroups(map))
table(srGroups(map)[grep("mRNA", srGroups(map))])
srOutline(map)[srGroups(map) %in% c("2x mRNA-1273 new", "3x mRNA-1273", "3x mRNA-1273 BD01", "3x mRNA-1273 BD29", "3x mRNA-1273 (6 month)")] <- "grey20"
unique(srSize(map))
srSize(map)[srGroups(map) %in% c("2x mRNA-1273 new", "3x mRNA-1273", "3x mRNA-1273 BD01", "3x mRNA-1273 BD29", "3x mRNA-1273 (6 month)")] <- 7
plot(map)
srOutline(map)[srGroups(map) %in% c("2x mRNA-1273 new", "3x mRNA-1273", "3x mRNA-1273 BD01", "3x mRNA-1273 BD29", "3x mRNA-1273 (6 month)")] <- "grey30"
unique(srSize(map))
srSize(map)[srGroups(map) %in% c("2x mRNA-1273 new", "3x mRNA-1273", "3x mRNA-1273 BD01", "3x mRNA-1273 BD29", "3x mRNA-1273 (6 month)")] <- 6
plot(map)
srSize(map)[srGroups(map) %in% c("2x mRNA-1273 new", "3x mRNA-1273", "3x mRNA-1273 BD01", "3x mRNA-1273 BD29", "3x mRNA-1273 (6 month)")] <- 5
plot(map)
png("figures/base_map_dark.png", 6, 5, units = 'in', res=300, pointsize = 12)
par(mar = rep(0.5, 4))
plot(map, xlim = lims$xlim, ylim = lims$ylim)
dev.off()
